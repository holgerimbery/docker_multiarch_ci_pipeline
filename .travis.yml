sudo: required

language: bash

service:
    - docker

before_install:
    - wget https://github.com/clnperez/cli/releases/download/1.0/docker-linux-amd64
    - chmod 755 docker-linux-amd64
    - docker pull multiarch/qemu-user-static:register
    - docker run --rm --privileged multiarch/qemu-user-static:register --reset
    - docker login -u="$DOCKER_USERNAME" -p="$DOCKER_PASSWORD"

script:
    - make arm64v8
    - make amd64
    - make arm32v6
    - make i386
    - make ppc64le
    - make s390x


after_success:
    - docker login -u="$DOCKER_USERNAME" -p="$DOCKER_PASSWORD"
    - docker push $REPO/$IMAGE_NAME:amd64
    - docker push $REPO/$IMAGE_NAME:arm32v6
    - docker push $REPO/$IMAGE_NAME:arm64v8
    - docker push $REPO/$IMAGE_NAME:i386
    - docker push $REPO/$IMAGE_NAME:ppc64le
    - docker push $REPO/$IMAGE_NAME:s390x
    - ./docker-linux-amd64 -v 
    - ./docker-linux-amd64 manifest create $REPO/$IMAGE_NAME:latest $REPO/$IMAGE_NAME:amd64 $REPO/$IMAGE_NAME:arm32v6 $REPO/$IMAGE_NAME:arm64v8 $REPO/$IMAGE_NAME:i386 $REPO/$IMAGE_NAME:ppc64le $REPO/$IMAGE_NAME:s390e -a
    - ./docker-linux-amd64 manifest inspect $REPO/$IMAGE_NAME:latest
    - ./docker-linux-amd64 manifest annotate $REPO/$IMAGE_NAME:latest $REPO/$IMAGE_NAME:amd64
    - ./docker-linux-amd64 manifest annotate $REPO/$IMAGE_NAME:latest $REPO/$IMAGE_NAME:arm32v6 --os linux --arch arm
    - ./docker-linux-amd64 manifest annotate $REPO/$IMAGE_NAME:latest $REPO/$IMAGE_NAME:arm64v8 --os linux --arch arm64 --variant armv8
    - ./docker-linux-amd64 manifest annotate $REPO/$IMAGE_NAME:latest $REPO/$IMAGE_NAME:i386 --os linux --arch 386
    - ./docker-linux-amd64 manifest annotate $REPO/$IMAGE_NAME:latest $REPO/$IMAGE_NAME:ppc64le --os linux --arch ppc64le
    - ./docker-linux-amd64 manifest annotate $REPO/$IMAGE_NAME:latest $REPO/$IMAGE_NAME:s390x --os linux --arch s390x
    - ./docker-linux-amd64 manifest push $REPO/$IMAGE_NAME:latest